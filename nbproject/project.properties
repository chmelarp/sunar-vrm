annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.run.all.processors=true
application.desc=
application.homepage=www.fit.vutbr.cz
application.title=Sunar VRM
application.vendor=FIT
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/sunar-vrm-vtapi.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.jaxen-1.1.3.jar=lib/lib/jaxen-1.1.3.jar
file.reference.jdom-2.0.3-contrib.jar=lib/jdom-2.0.3-contrib.jar
file.reference.jdom-2.0.3-javadoc.jar=lib/jdom-2.0.3-javadoc.jar
file.reference.jdom-2.0.3-sources.jar=lib/jdom-2.0.3-sources.jar
file.reference.jdom-2.0.3.jar=lib/jdom-2.0.3.jar
file.reference.postgresql-9.1-902.jdbc4.jar=lib/postgresql-9.1-902.jdbc4.jar
file.reference.xercesImpl.jar=lib/lib/xercesImpl.jar
file.reference.xml-apis.jar=lib/lib/xml-apis.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.postgresql-9.1-902.jdbc4.jar}:\
    ${libs.swing-app-framework.classpath}:\
    ${file.reference.jdom-2.0.3-contrib.jar}:\
    ${file.reference.jdom-2.0.3-javadoc.jar}:\
    ${file.reference.jdom-2.0.3-sources.jar}:\
    ${file.reference.jdom-2.0.3.jar}:\
    ${libs.swing-layout.classpath}:\
    ${file.reference.jaxen-1.1.3.jar}:\
    ${file.reference.xercesImpl.jar}:\
    ${file.reference.xml-apis.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=true
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=true
javadoc.windowtitle=VTApi SUNAR VRM
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=defaut
jnlp.offline-allowed=false
jnlp.signed=false
main.class=sunarvrm.SunarvrmApp
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
